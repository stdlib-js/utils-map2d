{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert-is-array-like-object' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Applies a function to each nested element in an array of arrays and assigns the result to a nested element in a new array of arrays.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<ArrayLikeObject>} arr - array of arrays\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be an array of arrays\n* @throws {TypeError} second argument must be a function\n* @returns {ArrayArray} array of arrays\n*\n* @example\n* var naryFunction = require( '@stdlib/utils-nary-function' );\n* var abs = require( '@stdlib/math-base-special-abs' );\n*\n* var arr = [\n*     [ -1, -2, -3 ],\n*     [ -4, -5, -6 ]\n* ];\n*\n* var out = map2d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ 1, 2, 3 ], [ 4, 5, 6 ] ]\n*/\nfunction map2d( arr, fcn, thisArg ) {\n\tvar out;\n\tvar tmp;\n\tvar M;\n\tvar N;\n\tvar a;\n\tvar i;\n\tvar j;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tM = arr.length;\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\ta = arr[ i ];\n\t\tif ( !isArrayLikeObject( a ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object containing array-like objects. Index: `%u`. Value: `%s`.', i, a ) );\n\t\t}\n\t\tN = a.length;\n\t\ttmp = [];\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\ttmp.push( fcn.call( thisArg, a[ j ], [ i, j ], arr ) );\n\t\t}\n\t\tout.push( tmp );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = map2d;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to each nested element in an array of arrays and assign the result to a nested element in a new array of arrays.\n*\n* @module @stdlib/utils-map2d\n*\n* @example\n* var naryFunction = require( '@stdlib/utils-nary-function' );\n* var abs = require( '@stdlib/math-base-special-abs' );\n* var map2d = require( '@stdlib/utils-map2d' );\n*\n* var arr = [\n*     [ -1, -2, -3 ],\n*     [ -4, -5, -6 ]\n* ];\n*\n* var out = map2d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ 1, 2, 3 ], [ 4, 5, 6 ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAoB,QAAS,qCAAsC,EACnEC,EAAa,QAAS,4BAA6B,EACnDC,EAAS,QAAS,uBAAwB,EAmC9C,SAASC,EAAOC,EAAKC,EAAKC,EAAU,CACnC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAK,CAACb,EAAmBI,CAAI,EAC5B,MAAM,IAAI,UAAWF,EAAQ,8EAA+EE,CAAI,CAAE,EAEnH,GAAK,CAACH,EAAYI,CAAI,EACrB,MAAM,IAAI,UAAWH,EAAQ,qEAAsEG,CAAI,CAAE,EAI1G,IAFAI,EAAIL,EAAI,OACRG,EAAM,CAAC,EACDK,EAAI,EAAGA,EAAIH,EAAGG,IAAM,CAEzB,GADAD,EAAIP,EAAKQ,CAAE,EACN,CAACZ,EAAmBW,CAAE,EAC1B,MAAM,IAAI,UAAWT,EAAQ,yHAA0HU,EAAGD,CAAE,CAAE,EAI/J,IAFAD,EAAIC,EAAE,OACNH,EAAM,CAAC,EACDK,EAAI,EAAGA,EAAIH,EAAGG,IACnBL,EAAI,KAAMH,EAAI,KAAMC,EAASK,EAAGE,CAAE,EAAG,CAAED,EAAGC,CAAE,EAAGT,CAAI,CAAE,EAEtDG,EAAI,KAAMC,CAAI,CACf,CACA,OAAOD,CACR,CAKAR,EAAO,QAAUI,ICrDjB,IAAIW,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isArrayLikeObject", "isFunction", "format", "map2d", "arr", "fcn", "thisArg", "out", "tmp", "M", "N", "a", "i", "j", "main"]
}
